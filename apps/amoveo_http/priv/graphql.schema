enum TransactionType {
  COINBASE
  SPEND
  CREATE_ACCOUNT
  DELETE_ACCOUNT
  MULTI
  NEW_CHANNEL
  CHANNEL_TEAM_CLOSE
  CHANNEL_SOLO_CLOSE
  CHANNEL_SLASH
  CHANNEL_TIMEOUT
  ORACLE_NEW
  ORACLE_BET
  ORACLE_CLOSE
  ORACLE_UNMATCHED
  ORACLE_WINNINGS
}

type CoinbaseTransaction {
  type: TransactionType
  from: String
  nonce: Int
  fee: String
}

type SpendTransaction {
  type: TransactionType
  from: String
  nonce: Int
  fee: String
  to: String
  amount: String
  version: Int
  signature: String
}

type CreateAccountTransaction {
  type: TransactionType
  from: String
  nonce: Int
  fee: String
  pubkey: String
  amount: String
  signature: String
}

type DeleteAccountTransaction {
  type: TransactionType
  from: String
  nonce: Int
  fee: String
  to: String
  signature: String
}

union Transaction = CoinbaseTransaction | SpendTransaction | CreateAccountTransaction | DeleteAccountTransaction

type Block {
  height: Int!
  prev_hash: String
  trees_hash: String
  time: Int
  difficulty: Int
  period: Int
  version: Int
  nonce: String
  market_cap: String
  channels_veo: Int
  live_channels: Int
  many_accounts: Int
  many_oracles: Int
  live_oracles: Int
  transactions: [Transaction]
}

type Header {
  height: Int!
  prev_hash: String
  trees_hash: String
  txs_proof_hash: String
  time: Int
  difficulty: Int
  version: Int
  nonce: String
  accumulative_difficulty: String
  period: Int
}

type Account {
  balance: String
  nonce: Int
  pubkey: String
  bets: String
  bets_hash: String
}

enum GovernanceOracleVariable {
  NONE
  BLOCK_REWARD
  DEVELOPER_REWARD
  TIME_GAS
  MAX_BLOCK_SIZE
  FUN_LIMIT
  VAR_LIMIT
  ORACLE_INITIAL_LIQUIDITY
  MINIMUM_ORACLE_TIME
  MAXIMUM_ORACLE_TIME
  MAXIMUM_QUESTION_SIZE
  GOVERNANCE_CHANGE_LIMIT
  CREATE_ACC_TX
  SPEND
  DELETE_ACC_TX
  NC
  CTC
  CSC
  TIMEOUT
  CS
  EX
  ORACLE_NEW
  ORACLE_BET
  ORACLE_CLOSE
  UNMATCHED
  ORACLE_WINNINGS
}

enum OracleType {
  EMPTY
  TRUE
  FALSE
  BAD_QUESTION
}

type Oracle {
  id: ID!
  result: String
  question: String
  starts: Int
  type: OracleType
  # orders: Int
  creator: String
  done_timer: Int
  governance: GovernanceOracleVariable
  governance_amount: Int
}

# type Key {
#   id: ID
#   pub: String
# }
#
# type Bet {
#   code: String
#   amount: String
#   key: String
#   meta: String
# }

input SignedTransactionInput {
  transaction: String!
  sig: String!
}

type SignedTransactionPayload {
  hash: String!
}

type Mutation {
  submitSignedTransaction(input: SignedTransactionInput!)
    : SignedTransactionPayload
}

type Query {
  account(pubkey: String): Account
  block(height: Int): Block
  header(height: Int): Header
  oracles: [Oracle]
}
